<Ui xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.blizzard.com/wow/ui/">

	<!-- Piano key template -->

	<Button name="MusicianMIDIPianoKey" virtual="true">
		<Size x="16" y="80"/>
		<Layers>
			<Layer level="BACKGROUND">
				<Texture parentKey="textureLeft" file="Interface\AddOns\MusicianMIDI\ui\textures\piano-keys" setAllPoints="true">
					<Size x="8" y="80"/>
					<Anchors>
						<Anchor point="LEFT" />
					</Anchors>
				</Texture>
				<Texture parentKey="textureRight" file="Interface\AddOns\MusicianMIDI\ui\textures\piano-keys" setAllPoints="true">
					<Size x="8" y="80"/>
					<Anchors>
						<Anchor point="RIGHT" />
					</Anchors>
				</Texture>
				<Texture parentKey="color" alphamode="MOD">
					<Anchors>
						<Anchor point="TOP" />
					</Anchors>
					<Color a="1" r="0" g="1" b="0" />
				</Texture>
				<Texture parentKey="glowLeft" alpha="0" alphamode="BLEND" file="Interface\AddOns\MusicianMIDI\ui\textures\piano-keys">
					<Size x="16" y="96"/>
					<Anchors>
						<Anchor point="RIGHT" relativePoint="CENTER" />
					</Anchors>
					<Color a="1" r=".992" g=".968" b=".854" />
				</Texture>
				<Texture parentKey="glowRight" alpha="0" alphamode="BLEND" file="Interface\AddOns\MusicianMIDI\ui\textures\piano-keys">
					<Size x="16" y="96"/>
					<Anchors>
						<Anchor point="LEFT" relativePoint="CENTER" />
					</Anchors>
					<Color a="1" r=".992" g=".968" b=".854" />
				</Texture>
			</Layer>
		</Layers>
		<Scripts>
			<OnLoad>
				self.key = 0
				self.isFirst = false
				self.isLast = true
				self.down = false
			</OnLoad>
			<OnShow>
				MusicianMIDI.Keyboard.SetVirtualKeyDown(self, self.down)
			</OnShow>
		</Scripts>
		<HighlightTexture parentKey="highlight" inherits="UIPanelButtonHighlightTexture">
			<Anchors>
				<Anchor point="TOP" />
			</Anchors>
		</HighlightTexture>
	</Button>

	<!-- Main frame -->

	<Frame name="MusicianMIDIKeyboard" inherits="MusicianDialogTemplate" enableKeyboard="true">

		<Size x="640" y="208" />

		<!-- Main title -->
		<Layers>
			<Layer level="BACKGROUND">
				<FontString name="$parentTitle" inherits="GameFontNormalLarge">
					<Anchors>
						<Anchor point="CENTER" relativePoint="TOP" x="0" y="-32" />
					</Anchors>
				</FontString>
			</Layer>
		</Layers>

		<Frames>

			<!-- Virtual piano keyboard -->

			<Frame name="$parentPianoKeys" parentKey="pianoKeys">
				<Size x="600" y="80" />
				<Anchors>
					<Anchor point="BOTTOM" y="20" />
				</Anchors>
			</Frame>
			<Frame name="$parentPianoKeysGlow" parentKey="pianoKeysGlow">
				<Anchors>
					<Anchor point="BOTTOMRIGHT" relativeTo="$parentPianoKeys" />
					<Anchor point="TOPLEFT" relativeTo="$parentPianoKeys" />
				</Anchors>
			</Frame>

			<!-- Upper instrument selector -->

			<Frame name="$parentUpperInstrument" inherits="MusicianInstrumentDropdownTemplate">
				<Anchors>
					<Anchor point="BOTTOM" relativePoint="TOP" relativeTo="$parentPianoKeys" />
					<Anchor point="RIGHT" x="-5" />
				</Anchors>
				<Scripts>
					<OnLoad inherit="prepend">
						MSA_DropDownMenu_SetWidth(self, 165)
					</OnLoad>
				</Scripts>
			</Frame>

			<!-- Upper transpose selector -->

			<Frame name="$parentUpperTranspose" inherits="MusicianDropDownMenuTooltipTemplate">
				<Anchors>
					<Anchor point="RIGHT" relativePoint="LEFT" relativeTo="$parentUpperInstrument" x="32" />
				</Anchors>
				<Scripts>
					<OnLoad inherit="prepend">
						MSA_DropDownMenu_SetWidth(self, 40)
					</OnLoad>
				</Scripts>
			</Frame>

			<!-- Lower transpose selector -->

			<Frame name="$parentLowerTranspose" parentKey="lowerTransposeDropdown" inherits="MusicianDropDownMenuTooltipTemplate">
				<Anchors>
					<Anchor point="BOTTOM" relativePoint="TOP" relativeTo="$parentPianoKeys" />
					<Anchor point="LEFT" x="5" />
				</Anchors>
				<Scripts>
					<OnLoad inherit="prepend">
						MSA_DropDownMenu_SetWidth(self, 40)
					</OnLoad>
				</Scripts>
			</Frame>

			<!-- Lower instrument selector -->

			<Frame name="$parentLowerInstrument" parentKey="lowerInstrumentDropdown" inherits="MusicianInstrumentDropdownTemplate">
				<Anchors>
					<Anchor point="LEFT" relativePoint="RIGHT" relativeTo="$parentLowerTranspose" x="-32" />
				</Anchors>
				<Scripts>
					<OnLoad inherit="prepend">
						MSA_DropDownMenu_SetWidth(self, 165)
					</OnLoad>
				</Scripts>
			</Frame>

			<!-- Live play button -->

			<Button name="$parentLiveModeButton" inherits="MusicianLEDTextButtonTemplate">
				<Size x="105" y="24" />
				<Anchors>
					<Anchor point="TOPRIGHT" x="-20" y="-20" />
				</Anchors>
				<Scripts>
					<OnLoad inherit="append">
						self:SetText(Musician.Msg.LIVE_MODE)
						self.led:SetVertexColor(.33, 1, 0, 1)
					</OnLoad>
				</Scripts>
			</Button>

			<!-- Band sync play button -->

			<Button name="$parentBandSyncButton" inherits="MusicianBandPlayButtonTemplate">
				<Size x="60" y="24" />
				<Anchors>
					<Anchor point="TOPLEFT" x="20" y="-20" />
				</Anchors>
				<Scripts>
					<OnClick inherit="append">
						Musician.Live.ToggleBandSyncMode()
					</OnClick>
					<OnLoad inherit="append">
						self.count:SetPoint("CENTER", self, "TOPRIGHT", -4, -4)
						self.tooltipText = Musician.Msg.LIVE_SYNC
					</OnLoad>
				</Scripts>
			</Button>

		</Frames>

		<Layers>
			<Layer level="OVERLAY">

				<!-- Upper section label -->

				<FontString name="$parentUpperLabel" parentKey="upperLabel" inherits="GameFontHighlight" justifyh="LEFT">
					<Size x="250" y="32" />
					<Anchors>
						<Anchor point="BOTTOMLEFT" relativePoint="TOPLEFT" relativeTo="$parentUpperTranspose" x="20" />
					</Anchors>
				</FontString>

				<!-- Lower section label -->

				<FontString name="$parentLowerLabel" parentKey="lowerLabel" inherits="GameFontHighlight" justifyh="LEFT">
					<Size x="250" y="32" />
					<Anchors>
						<Anchor point="BOTTOMLEFT" relativePoint="TOPLEFT" relativeTo="$parentLowerTranspose" x="20" />
					</Anchors>
				</FontString>
			</Layer>
		</Layers>

		<Frames>

			<!-- Split button -->

			<Button name="$parentSplitButton" parentKey="splitButton" inherits="MusicianLEDTextButtonTemplate">
				<Size x="72" y="22" />
				<Anchors>
					<Anchor point="BOTTOM" y="37" relativePoint="TOP" relativeTo="$parentPianoKeys" />
				</Anchors>
				<NormalFont style="MusicianFontIconsNormal" />
				<HighlightFont style="MusicianFontIconsHighlight" />
				<DisabledFont style="MusicianFontIconsDisable" />
				<Scripts>
					<OnLoad inherit="append">
						self.SetChecked = function(self, checked)
							self.checked = checked
							if checked then
								self.led:SetAlpha(1)
							else
								self.led:SetAlpha(0)
							end
						end

						self.GetChecked = function(self, checked)
							return self.checked
						end

						self:SetText(MusicianMIDI.Msg.SPLIT_KEYBOARD)
						self.led:SetVertexColor(.33, 1, 0, 1)
					</OnLoad>
					<OnClick inherit="append">
						PlaySound(SOUNDKIT.U_CHAT_SCROLL_BUTTON)
						local isSplit = not(MusicianMIDI.Keyboard.IsSplit())
						MusicianMIDI.Keyboard.SetSplit(isSplit)
						self:SetChecked(isSplit)
					</OnClick>
				</Scripts>
			</Button>

			<!-- Split point edit box -->

			<EditBox name="$parentSplitKeyEditBox" parentKey="splitKeyEditBox" inherits="InputBoxTemplate" letters="3" historyLines="0" autofocus="false">
				<Size x="40" y="22"/>
				<Anchors>
					<Anchor point="BOTTOM" y="7" x="2" relativePoint="TOP" relativeTo="$parentPianoKeys" />
				</Anchors>
				<FontString inherits="GameFontHighlightSmall" justifyH="CENTER" justifyV="MIDDLE" />
				<Scripts>
					<OnEscapePressed>self:ClearFocus()</OnEscapePressed>
					<OnEditFocusGained>
						self.isSettingSplitPoint = true
						self:HighlightText(0)
						GameTooltip:SetOwner(self, "ANCHOR_TOP")
						GameTooltip_SetTitle(GameTooltip, MusicianMIDI.Msg.SET_SPLIT_KEY_HINT)
					</OnEditFocusGained>
					<OnEditFocusLost>
						C_Timer.After(0, function() self.isSettingSplitPoint = false end)
						GameTooltip:Hide()
						self:SetText(Musician.Sampler.NoteName(MusicianMIDI.Keyboard.GetSplitKey()))
						self:HighlightText(0, 0)
					</OnEditFocusLost>
					<OnKeyDown>
						self.isSettingSplitPoint = false
						MusicianMIDI.Keyboard.SetSplitKeyFromKeyboard(key)
						self:ClearFocus()
					</OnKeyDown>
				</Scripts>
			</EditBox>

		</Frames>

		<Scripts>
			<OnLoad inherit="prepend">
				self.upperLabel:SetText(Musician.Msg.LAYERS[Musician.KEYBOARD_LAYER.UPPER])
				self.lowerLabel:SetText(Musician.Msg.LAYERS[Musician.KEYBOARD_LAYER.LOWER])
				MusicianMIDIKeyboardTitle:SetText(MusicianMIDI.Msg.MIDI_KEYBOARD_TITLE)
			</OnLoad>
		</Scripts>
	</Frame>
</Ui>
